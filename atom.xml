<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://scottwestover.github.io/"/>
  <updated>2018-02-15T00:13:14.000Z</updated>
  <id>http://scottwestover.github.io/</id>
  
  <author>
    <name>Scott Westover</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Phaser3 - Create a simple preloader</title>
    <link href="http://scottwestover.github.io/2018/02/14/Phaser3-Create-a-simple-preloader/"/>
    <id>http://scottwestover.github.io/2018/02/14/Phaser3-Create-a-simple-preloader/</id>
    <published>2018-02-14T22:45:42.000Z</published>
    <updated>2018-02-15T00:13:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>With the official release of Phaser 3 this week, and Phaser 2 games not working on Phaser 3, it would be a great time to start using Phaser 3. In this tutorial, I am going to show you how to make a simple preloader in Phaser 3.<br><a id="more"></a></p><p>For this tutorial, we are going to keep things simple, and just put all of our code in our HTML file. To get started, we need to create an <code>index.html</code> file, add the <code>phaser.min.js</code> script, and initialize our Phaser game object. Here is an example of that:</p><script src="https://gist.github.com/scottwestover/d7ab1a8b2643f038c00412960013e83e.js?file=start.html"></script><p>In order to run your game, you will need to host it on a local web server. If you are not sure on how to do this, you can read more about it here: <a href="https://phaser.io/tutorials/getting-started" target="_blank" rel="noopener">https://phaser.io/tutorials/getting-started</a>.</p><p>If you try running your game right now, you should see an empty screen with a black box. However, if you open the console, you should see that Phaser 3 is running.</p><img src="/2018/02/14/Phaser3-Create-a-simple-preloader/1.png" title="empty game"><p>Next, we will load an image into our game. For this tutorial, I am going to use the Phaser logo. You can right click on the image, and choose ‘Save Image As…’, or you can use any image you have. You will need to add this image to the same directory that your index.html file is in.<br><img src="/2018/02/14/Phaser3-Create-a-simple-preloader/logo.png" title="phaser logo image"></p><p>In the <code>preload</code> function, add the following code to load the image:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.load.image(&apos;logo&apos;, &apos;logo.png&apos;);</span><br></pre></td></tr></table></figure></p><p>In the <code>create</code> function, add the following code to add the image to our game:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var logo = this.add.image(400, 300, &apos;logo&apos;);</span><br></pre></td></tr></table></figure></p><p>If you reload the game, you should see your image appear in the game.<br><img src="/2018/02/14/Phaser3-Create-a-simple-preloader/2.png" title="phaser game step 2"></p><p>The image loads pretty quickly, right? Well, if your game has to load a large number assets (images, audio files, fonts, etc), or the user has a slow internet connection, it could take awhile for all your assets to load, and the user would just see a black screen. To simulate this, you can add the following code to the <code>preload</code> function below the image you loaded:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; 500; i++) &#123;</span><br><span class="line">  this.load.image(&apos;logo&apos;+i, &apos;assets/logo.png&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>If you reload your game, you should see that it takes a little while for our game image to appear. To show the users that your game is loading, we can add a progress bar. To do this, we are going to create 2 rectangles, one for the progress bar, and one as a boarder to the bar. In the <code>preload</code> function, add the following code at the top of the function:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var progress = this.add.graphics();</span><br><span class="line">var progressBox = this.add.graphics();</span><br><span class="line">progressBox.fillStyle(0x222222, 0.8);</span><br><span class="line">progressBox.fillRect(240, 270, 320, 50);</span><br></pre></td></tr></table></figure></p><p>To update the fill of the progress bar as the assets are loaded, we listen to the <code>progress</code> event. In the <code>preload</code> function, add the following code below the code you just added:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this.load.on(&apos;progress&apos;, (value) =&gt; &#123;</span><br><span class="line">  progress.clear();</span><br><span class="line">  progress.fillStyle(0xffffff, 1);</span><br><span class="line">  progress.fillRect(250, 280, 300 * value, 30);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Lastly, we can remove the progress bar from the game by destorying it once everything is loaded. We can do this by listening to the <code>complete</code> event. Add the following code below the code you just added:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">this.load.on(&apos;complete&apos;, () =&gt; &#123;</span><br><span class="line">  progress.destroy();</span><br><span class="line">  progressBox.destroy();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>If you reload your game, you should see a nice preloader that fills up as assets are loaded.<br><img src="/2018/02/14/Phaser3-Create-a-simple-preloader/3.gif" title="completed preloader"></p><p>You can find the complete code below:</p><script src="https://gist.github.com/scottwestover/d7ab1a8b2643f038c00412960013e83e.js?file=index.html"></script><p>I hope you enjoyed this short tutorial. If you have any questions or comments, please share them below.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;With the official release of Phaser 3 this week, and Phaser 2 games not working on Phaser 3, it would be a great time to start using Phaser 3. In this tutorial, I am going to show you how to make a simple preloader in Phaser 3.&lt;br&gt;
    
    </summary>
    
    
      <category term="Game Development, PhaserJS, Tutorial" scheme="http://scottwestover.github.io/tags/Game-Development-PhaserJS-Tutorial/"/>
    
  </entry>
  
  <entry>
    <title>Phaser 3 Release</title>
    <link href="http://scottwestover.github.io/2018/02/11/Phaser-3-Release/"/>
    <id>http://scottwestover.github.io/2018/02/11/Phaser-3-Release/</id>
    <published>2018-02-11T06:24:04.000Z</published>
    <updated>2018-02-11T06:46:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>In just a few short days, Phaser 3 will officially be released (Feb. 12th)! If you are not familiar with Phaser, it is a desktop and mobile HTML5 game framework that is written in JavaScript. The framework is easy to use, free, and completely open source.</p><a id="more"></a><p>Phaser 3 has been in continuous development since October 2016, and it has undergone a lot of changes since then. While waiting for the new version to be released, the developers has regularly been releasing beta builds of the framework, so it has been interesting to watch how it has changed. The API has undergone a lot of changes, and everything has been rewritten since version 2.</p><p>You can find lots of examples on the new API here: <a href="http://labs.phaser.io/index.html" target="_blank" rel="noopener">http://labs.phaser.io/index.html</a></p><p>There are a variety of ways on how you can get started using Phaser 3, but my favorite is the webpack template that they made (<a href="https://github.com/photonstorm/phaser3-project-template" target="_blank" rel="noopener">https://github.com/photonstorm/phaser3-project-template</a>). The template will automatically grab the latest version of Phaser, and it has live reload so it is easy to test your game changes as you build it. </p><p>I have been spending more time with the latest beta, and I can’t wait for the official version to come out in just a few days. Once it is released, I am hoping to release some more most posts on it here.</p><p>If you have any comments, please share them below.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In just a few short days, Phaser 3 will officially be released (Feb. 12th)! If you are not familiar with Phaser, it is a desktop and mobile HTML5 game framework that is written in JavaScript. The framework is easy to use, free, and completely open source.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Game Development, PhaserJS" scheme="http://scottwestover.github.io/tags/Game-Development-PhaserJS/"/>
    
  </entry>
  
  <entry>
    <title>Progressive Web App</title>
    <link href="http://scottwestover.github.io/2018/02/10/Progressive-Web-App/"/>
    <id>http://scottwestover.github.io/2018/02/10/Progressive-Web-App/</id>
    <published>2018-02-10T07:58:22.000Z</published>
    <updated>2018-02-11T06:25:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>At the beginning of January, I was accepted into the Grow With Google Scholarship from Udacity. If you are not familar with this program, I really recommend that you check it out. Basically, Google is scholarships for the Nano degrees that are available on Udacity. However, the scholarship is split into two phases.<br><a id="more"></a><br>During the first phase, they admit 10,000 or 15,000 into the first phase (depends on which track you applied for), and you have 3 months to complete the courses that they make available to you. After these 3 months are over, they will offer 1,000 of these applicants a full scholarship for the Nanodegree. You can read more about it here: <a href="https://www.udacity.com/grow-with-google" target="_blank" rel="noopener">https://www.udacity.com/grow-with-google</a></p><p>The first course that I took as part of this program was all about offline first and what a pwa (progressive web app) is. A pwa is a regular website that can appear and behave like a traditional mobile app. When implemented correctly, the pwa will allow users to <code>install</code> or <code>add</code> your website to the home screen of their phone, like it was an app. It can also cache some of the assets of your website, that way if the user tries to visit your site when offline, they will see some content, just like in a mobile app.</p><p>You can read more about pwa here: <a href="https://developers.google.com/web/fundamentals/codelabs/your-first-pwapp/" target="_blank" rel="noopener">https://developers.google.com/web/fundamentals/codelabs/your-first-pwapp/</a></p><p>Also, you can learn more about them on Udacity here: <a href="https://www.udacity.com/course/intro-to-progressive-web-apps--ud811" target="_blank" rel="noopener">https://www.udacity.com/course/intro-to-progressive-web-apps--ud811</a></p><p>After taking this course, I was ready to implement what I learned, and I thought it would be great to turn my blog into a pwa. With Hexo, it was actually pretty easy to do. I just needed to create a manifest.json, a precache service worker, and register it. There is an excellent blog post here that details how to do this: <a href="https://alexjoverm.github.io/2017/08/07/How-I-made-a-Progressive-Web-App-out-of-my-Blog/" target="_blank" rel="noopener">https://alexjoverm.github.io/2017/08/07/How-I-made-a-Progressive-Web-App-out-of-my-Blog/</a></p><p>To test the pwa functionality, you can visit the home page of my blog, turn off your internet connection, and then refresh the page. Instead of seeing the normal offline message of your web browser, you should still see some of the content of my blog. Also, if you visit the site on your mobile device, you should get a prompt about adding this site to your home screen!</p><p>If you have any comments, please share them below.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;At the beginning of January, I was accepted into the Grow With Google Scholarship from Udacity. If you are not familar with this program, I really recommend that you check it out. Basically, Google is scholarships for the Nano degrees that are available on Udacity. However, the scholarship is split into two phases.&lt;br&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="http://scottwestover.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>Switching to Hexo</title>
    <link href="http://scottwestover.github.io/2018/02/08/Switching-to-Hexo/"/>
    <id>http://scottwestover.github.io/2018/02/08/Switching-to-Hexo/</id>
    <published>2018-02-09T04:04:32.000Z</published>
    <updated>2018-02-11T06:25:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>It has been awhile since my last post, and with a new year, I figured it was time for a change. I started looking into new ways to blog, and I decided to give Hexo a try.<br><a id="more"></a><br>Also, with the switch to a new platform, I decided to update the look of my blog and went with a simple theme so I could just focus on the blog posts. Originally, I started to update my blog to use Jekyll (awhile ago), and I wanted to try hosting the site on GitHub instead of Blogger. However, I never quite got around to finishing the migration. Hexo seemed very easy to use, and I liked how easy it was to deploy to GitHub, so I figured I would give it a shot. </p><p>Instead of waiting for me to move everything over to Hexo, I decided I would do a fresh launch and start bringing posts over as time allowed. One of my goals for this year is to get this blog back up and running, and to do posts more frequently. I hope you enjoy the new look.</p><p>In case you are looking for any of the old posts, you can find them on Blogger here: <a href="http://scottwestover.blogspot.com/" target="_blank" rel="noopener">http://scottwestover.blogspot.com/</a>.</p><p>If you have any comments, please share them below.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It has been awhile since my last post, and with a new year, I figured it was time for a change. I started looking into new ways to blog, and I decided to give Hexo a try.&lt;br&gt;
    
    </summary>
    
    
      <category term="Misc" scheme="http://scottwestover.github.io/tags/Misc/"/>
    
  </entry>
  
</feed>
